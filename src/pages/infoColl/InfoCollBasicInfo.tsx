import React, { useState, useImperativeHandle, forwardRef, useEffect } from 'react';
import { Box, Typography, TextField, MenuItem, Snackbar, Alert } from '@mui/material';
import FileUploadButton from '../../components/FileUploadButton';
import { infoCollApi } from '../../services/api';
import { extractFileName } from '../../services/s3Service';

const genderOptions = ['Male', 'Female', 'Other'];
const yesNoOptions = ['Yes', 'No'];
const visaOptions = ['Visa Abroad', 'Adjust Status'];
const countryOptions = ['USA', 'China', 'Canada', 'Other']; // 可根据需要扩展

const InfoCollBasicInfo = forwardRef(({ clientCaseId }: { clientCaseId: number }, ref) => {
  const [formData, setFormData] = useState<{ [key: string]: any }>({});
  const [snackbar, setSnackbar] = useState<{ open: boolean; message: string; severity: 'success' | 'error' }>({ open: false, message: '', severity: 'success' });

  useEffect(() => {
    if (clientCaseId) {
      infoCollApi.getBasicInfo(clientCaseId).then(res => {
        if (res && res.data) {
          setFormData(res.data);
        }
      }).catch(() => {
        // 可以加错误提示
      });
    }
  }, [clientCaseId]);

  // 通用输入处理
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  // 下拉选择处理
  const handleSelectChange = (name: string) => (e: any) => {
    setFormData(prev => ({ ...prev, [name]: e.target.value }));
  };

  // 上传文件回调
  const handleFileUrlChange = (name: string, url: string | null) => {
    setFormData(prev => ({ ...prev, [name]: url }));
  };

  // 关闭snackbar
  const handleCloseSnackbar = () => {
    setSnackbar(prev => ({ ...prev, open: false }));
  };

  // 暴露方法给父组件
  useImperativeHandle(ref, () => ({
    getFormData: () => formData,
    submit: async (clientCase: any) => {
      try {
        const data = { ...formData, clientCaseId: clientCase.clientCaseId }; // 只合并 clientCase.clientCaseId
        await infoCollApi.submitBasicInfo(data);
        setSnackbar({ open: true, message: '保存成功', severity: 'success' });
      } catch (e: any) {
        setSnackbar({ open: true, message: e?.message || '保存失败', severity: 'error' });
      }
    }
  }));

  return (
    <Box component="form" noValidate autoComplete="off">
      <Typography variant="h6" fontWeight={700} sx={{ mb: 2 }}>Basic Info</Typography>
      {/* Respondents (autogenerated) */}
      <TextField label="Respondents (autogenerated)" fullWidth size="small" sx={{ mb: 2 }} InputProps={{ readOnly: true }} value="自动生成" />
      {/* First Name */}
      <TextField
        name="firstName"
        label="First Name"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.firstName || ''}
        onChange={handleChange}
        required
      />
      {/* Middle Name */}
      <TextField
        name="middleName"
        label="Middle Name (optional)"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.middleName || ''}
        onChange={handleChange}
      />
      {/* Last Name */}
      <TextField
        name="lastName"
        label="Last Name"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.lastName || ''}
        onChange={handleChange}
        required
      />
      {/* Full Name (autogenerated) */}
      <TextField
        name="fullName"
        label="Full Name (autogenerated)"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        InputProps={{ readOnly: true }}
        value={
          (formData.firstName || '') +
          (formData.middleName ? ' ' + formData.middleName : '') +
          (formData.lastName ? ' ' + formData.lastName : '') || '自动生成'
        }
      />
      {/* Email */}
      <TextField
        name="email"
        label="Email"
        type="email"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.email || ''}
        onChange={handleChange}
      />
      {/* Gender */}
      <TextField
        name="gender"
        label="Gender"
        select
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.gender || ''}
        onChange={handleSelectChange('gender')}
      >
        {genderOptions.map(opt => <MenuItem key={opt} value={opt}>{opt}</MenuItem>)}
      </TextField>
      {/* Premium Processing */}
      <TextField
        name="premiumProcessing"
        label="Do you want premium processing?"
        select
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.premiumProcessing || ''}
        onChange={handleSelectChange('premiumProcessing')}
      >
        {yesNoOptions.map(opt => <MenuItem key={opt} value={opt}>{opt}</MenuItem>)}
      </TextField>
      {/* Phone Number */}
      <TextField
        name="phoneNumber"
        label="Phone Number"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.phoneNumber || ''}
        onChange={handleChange}
      />
      {/* Date of Birth */}
      <TextField
        name="dob"
        label="Date of Birth"
        type="date"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        InputLabelProps={{ shrink: true }}
        value={formData.dob || ''}
        onChange={handleChange}
      />
      {/* SSN */}
      <TextField
        name="ssn"
        label="SSN"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.ssn || ''}
        onChange={handleChange}
      />
      {/* City/Province/Country of Birth */}
      <TextField
        name="birthLocation"
        label="City/Province/Country of Birth"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.birthLocation || ''}
        onChange={handleChange}
      />
      {/* Country of Citizenship */}
      <TextField
        name="citizenship"
        label="Country of Citizenship"
        select
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.citizenship || ''}
        onChange={handleSelectChange('citizenship')}
      >
        {countryOptions.map(opt => <MenuItem key={opt} value={opt}>{opt}</MenuItem>)}
      </TextField>
      {/* Current US Address */}
      <TextField
        name="usAddress"
        label="Current US Address"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.usAddress || ''}
        onChange={handleChange}
      />
      {/* Foreign Address (Native Language) */}
      <TextField
        name="foreignAddressNative"
        label="Foreign Address (Native Language)"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.foreignAddressNative || ''}
        onChange={handleChange}
      />
      {/* Foreign Address (English) */}
      <TextField
        name="foreignAddressEng"
        label="Foreign Address (English)"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.foreignAddressEng || ''}
        onChange={handleChange}
      />
      {/* Current Country of Residence */}
      <TextField
        name="residenceCountry"
        label="Current Country of Residence"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.residenceCountry || ''}
        onChange={handleChange}
      />
      {/* Will you apply for a visa abroad or adjust in the US? */}
      <TextField
        name="visaStatus"
        label="Will you apply for a visa abroad or adjust in the US?"
        select
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.visaStatus || ''}
        onChange={handleSelectChange('visaStatus')}
      >
        {visaOptions.map(opt => <MenuItem key={opt} value={opt}>{opt}</MenuItem>)}
      </TextField>
      {/* How many kids do you have? */}
      <TextField
        name="kidsCount"
        label="How many kids do you have?"
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.kidsCount || ''}
        onChange={handleChange}
        type="number"
      />
      {/* Has any immigration petition been filed on your behalf? */}
      <TextField
        name="immigrationPetition"
        label="Has any immigration petition been filed on your behalf?"
        select
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.immigrationPetition || ''}
        onChange={handleSelectChange('immigrationPetition')}
      >
        {yesNoOptions.map(opt => <MenuItem key={opt} value={opt}>{opt}</MenuItem>)}
      </TextField>
      {/* If yes, upload receipt/approval notice */}
      {formData.immigrationPetition === 'Yes' && (
        <FileUploadButton
          label="Upload Receipt/Approval Notice (PDF)"
          fileType="petitionNotice"
          onFileUrlChange={url => handleFileUrlChange('petitionNotice', url)}
          required
        />
      )}
      {/* Copy of Passport */}
      <FileUploadButton
        label="Upload Copy of Passport (PDF)"
        fileType="passport"
        onFileUrlChange={url => handleFileUrlChange('passport', url)}
        required
        fileUrl={formData.passport}
        fileName={formData.passport && extractFileName(formData.passport)}
      />
      {/* Copy of Old Passport (optional) */}
      <FileUploadButton
        label="Upload Copy of Old Passport (PDF, optional)"
        fileType="oldPassport"
        onFileUrlChange={url => handleFileUrlChange('oldPassport', url)}
        fileUrl={formData.oldPassport}
        fileName={formData.oldPassport && extractFileName(formData.oldPassport)}
      />
      {/* Copy of Visa Stamp (optional) */}
      <FileUploadButton
        label="Upload Copy of Visa Stamp (PDF, optional)"
        fileType="visaStamp"
        onFileUrlChange={url => handleFileUrlChange('visaStamp', url)}
        fileUrl={formData.visaStamp}
        fileName={formData.visaStamp && extractFileName(formData.visaStamp)}
      />
      {/* Copy of Most Recent I-94 */}
      <FileUploadButton
        label="Upload Copy of Most Recent I-94 (PDF)"
        fileType="i94"
        onFileUrlChange={url => handleFileUrlChange('i94', url)}
        required
        fileUrl={formData.i94}
        fileName={formData.i94 && extractFileName(formData.i94)}
      />
      {/* Copy of Non-Immigrant Status Evidence (optional) */}
      <FileUploadButton
        label="Upload Copy of Non-Immigrant Status Evidence (PDF, optional)"
        fileType="nonimmigrantStatus"
        onFileUrlChange={url => handleFileUrlChange('nonimmigrantStatus', url)}
        fileUrl={formData.nonimmigrantStatus}
        fileName={formData.nonimmigrantStatus && extractFileName(formData.nonimmigrantStatus)}
      />
      {/* Are you single? */}
      <TextField
        name="maritalStatus"
        label="Are you single?"
        select
        fullWidth
        size="small"
        sx={{ mb: 2 }}
        value={formData.maritalStatus || ''}
        onChange={handleSelectChange('maritalStatus')}
      >
        {yesNoOptions.map(opt => <MenuItem key={opt} value={opt}>{opt}</MenuItem>)}
      </TextField>
      <Snackbar
        open={snackbar.open}
        autoHideDuration={4000}
        onClose={handleCloseSnackbar}
        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}
      >
        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>
          {snackbar.message}
        </Alert>
      </Snackbar>
    </Box>
  );
});

export default InfoCollBasicInfo; 